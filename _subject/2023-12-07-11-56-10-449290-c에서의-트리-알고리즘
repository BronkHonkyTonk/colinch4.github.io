이진 트리(Binary Tree)
이진 검색 트리(Binary Search Tree)
균형 이진 트리(Balanced Binary Tree)
AVL 트리
레드-블랙 트리(Red-Black Tree)
힙(Heap)
트라이(Trie) 구조
트리 순회(Tree Traversal)
전위 순회(Preorder Traversal)
중위 순회(Inorder Traversal)
후위 순회(Postorder Traversal)
레벨 순회(Level Order Traversal)
트리의 높이와 깊이(Tree Height and Depth)
트리의 지름(Tree Diameter)
루트-리프 경로 합(Root-to-Leaf Path Sum)
이진 트리의 최소 높이(Minimum Height of Binary Tree)
가장 가까운 공통 조상(Lowest Common Ancestor)
트리의 가장 깊은 노드(Deepest Node in a Tree)
이진 트리의 최대 경로 합(Maximum Path Sum in Binary Tree)
이진 트리의 직경(Diameter of Binary Tree)
이진 검색 트리의 유효성 확인(Validate Binary Search Tree)
두 이진 트리 병합(Merge Two Binary Trees)
이진 탐색 트리에서 k번째로 작은 요소(Kth Smallest Element in a BST)
이진 검색 트리에서 두 노드 간의 거리(Find Distance Between Two Nodes in BST)
레드-블랙 트리의 삽입(Red-Black Tree Insertion)
레드-블랙 트리의 삭제(Red-Black Tree Deletion)
AVL 트리의 회전 연산(AVL Tree Rotations)
AVL 트리의 균형 유지(Balancing AVL Tree)
이진 힙(Binary Heap)
최대 힙(Max Heap) 구현
최소 힙(Min Heap) 구현
트라이(Trie) 구조의 삽입과 검색(Trie Insertion and Search)
트라이의 최대 XOR 합(Maximum XOR in a Trie)
트리의 직렬화(Serialize a Tree)
트리의 역직렬화(Deserialize a Tree)
트리의 두 가지 구조적 차이점(Two Structural Differences in Trees)
트리의 공통 조상 찾기(Find Common Ancestor in Tree)
부분 트리 확인(Subtree Check)
가장 가까운 잎 노드까지의 거리(Distance to the Nearest Leaf Node)
트리의 가장 작은 공통 조상(Find the Smallest Common Ancestor in Tree)
서브트리에 속하는 트리 모든 노드의 합(Sum of All Nodes in a Subtree)
트리의 노드 수 세기(Count the Number of Nodes in a Tree)
트리의 잎 노드 수 세기(Count the Number of Leaf Nodes in a Tree)
모든 노드의 깊이 합 구하기(Find Sum of Depths for All Nodes in a Tree)
가장 가까운 리프까지의 노드 간 거리(Find Distance Between Nodes to Nearest Leaf)
부분 트리의 깊이(Subtree Depth)
이진 트리 노드의 수준 순회(Level Order Traversal in Binary Tree)
트리의 노드 값 업데이트(Update Node Values in Tree)
트리의 가장 깊은 잎 노드까지의 거리(Distance to the Deepest Leaf Node in Tree)
트리에서 두 노드 사이의 거리(Distance Between Two Nodes in Tree)