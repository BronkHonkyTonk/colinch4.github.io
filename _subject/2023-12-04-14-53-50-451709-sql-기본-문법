SELECT 문의 기본 구조
FROM 절의 역할과 사용 방법
WHERE 절을 이용한 조건 지정
DISTINCT 키워드를 사용한 중복 제거
ORDER BY 절을 이용한 결과 정렬
GROUP BY 절과 집계 함수의 사용
JOIN을 사용한 테이블 간의 연결
INNER JOIN과 OUTER JOIN의 차이점
UNION 연산자를 사용한 쿼리 결과 결합
서브쿼리의 개념과 활용 방법
테이블 생성과 ALTER TABLE 문의 사용
데이터의 삽입과 UPDATE 문의 사용
DELETE 문을 이용한 데이터 삭제
데이터베이스의 제약 조건 설정
인덱스의 역할과 성능 향상에 대한 이해
트랜잭션의 개념과 ACID 특성
트랜잭션의 처리 방법과 COMMIT, ROLLBACK 문의 사용
뷰(View)의 개념과 활용
서버 측 프로그래밍 언어와의 연동
데이터베이스 백업과 복구 방법
테이블의 구조 변경을 위한 ALTER 문의 사용
JOIN 과 WHERE 구문의 차이점
데이터베이스 사용자와 권한 설정
NULL 값 처리 방법
데이터의 형변환과 CAST, CONVERT 함수의 사용
집계 함수와 GROUP BY의 작동 원리
서브쿼리와 메인 쿼리의 관계 및 실행 순서
데이터베이스의 정규화 개념과 이점
테이블 간의 관계 설정과 외래 키(Foreign Key)
테이블의 구조 변경을 위한 ALTER TABLE 문의 사용 방법
데이터의 일괄 수정을 위한 UPDATE 문의 사용 방법
테이블의 데이터 삭제를 위한 DELETE 문의 사용 방법
제약 조건의 종류와 설정 방법
인덱스의 종류와 생성 방법
인덱스를 사용한 검색 성능 최적화 방법
트랜잭션의 미확정 상태와 롤백의 개념
트랜잭션 격리 수준과 동시성 제어
데이터베이스 뷰의 역할과 설계 원칙
뷰 생성과 사용 방법
외래 키(Foreign Key)의 제약 조건 설정 방법
NULL 값 처리에 대한 주의 사항
문자열 연산과 패턴 매칭을 위한 LIKE 연산자 사용
날짜와 시간 데이터 처리를 위한 함수 사용 방법
조건부 데이터 조회를 위한 CASE 문의 사용 방법
서브쿼리의 종류와 활용 사례
INSERT INTO 문을 이용한 데이터 삽입 방법
ALTER TABLE 문을 사용한 테이블 구조 변경 방법
데이터 생성 및 변경 시 트랜잭션 처리의 중요성
데이터베이스 백업 방법의 선택 및 주기 설정
데이터베이스 설계 시 성능 최적화를 위한 고려 사항