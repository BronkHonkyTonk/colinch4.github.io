자바스크립트 실행 컨텍스트란 무엇인가?
전역 컨텍스트(global context)에 대해 알아보자.
함수 컨텍스트(function context)에 대해 알아보자.
컨텍스트 스택(context stack)이란 무엇인가?
변수 객체(variable object)란 무엇인가?
스코프 체인(scope chain)이란 무엇인가?
this 키워드에 대해 알아보자.
변수 및 함수 호이스팅(hoisting)에 대해 알아보자.
실행 컨텍스트의 생성과 소멸 과정은 어떻게 되는가?
실행 컨텍스트 스택(execution context stack)이란 무엇인가?
함수 실행 컨텍스트가 생성되는 과정은 어떻게 되는가?
실행 컨텍스트와 클로저(closure)의 관계는 무엇인가?
렉시컬 스코프(lexical scope)와 실행 컨텍스트의 관계는 무엇인가?
스트릭트 모드(strict mode)에서 실행 컨텍스트 동작은 어떻게 달라지는가?
실행 컨텍스트를 디버깅하는 방법에 대해 알아보자.
호이스팅이란 무엇이며, 왜 실행 컨텍스트에서 중요한가?
메모리 누수(memory leak)와 실행 컨텍스트의 관계는 무엇인가?
실행 컨텍스트를 활용한 디자인 패턴에 대해 알아보자.
클로저와 실행 컨텍스트의 차이점은 무엇인가?
실행 컨텍스트와 비동기 처리(Asynchronous processing)의 관계는 무엇인가?
실행 컨텍스트와 스코프의 유효 기간은 어떻게 결정되는가?
실행 컨텍스트에서의 변수(Variable)와 매개변수(Parameter)의 차이점은 무엇인가?
실행 컨텍스트와 메모리 효율의 관계는 무엇인가?
this 바인딩과 실행 컨텍스트 동작은 어떻게 달라지는가?
함수 선언문과 함수 표현식의 실행 컨텍스트 동작은 어떻게 달라지는가?
실행 컨텍스트 별로 각각의 scope chain이 어떻게 구성되는가?
실행 컨텍스트에 대한 추상적인 이해와 실제 동작의 차이점은 무엇인가?
실행 컨텍스트와 프로토타입 체인(prototype chain)의 관계는 무엇인가?
표현식(Expression)과 문장(Statement)의 실행 컨텍스트 동작 차이는 무엇인가?
실행 컨텍스트와 변수 스코프(Variable scope)의 차이점은 무엇인가?
with 문과 실행 컨텍스트의 동작은 어떻게 달라지는가?
실행 컨텍스트와 호출 스택(call stack)의 관계는 무엇인가?
실행 컨텍스트와 클로저의 메모리 관리 방식은 어떻게 달라지는가?
실행 컨텍스트와 DOM(Document Object Model)의 관계는 무엇인가?
실행 컨텍스트와 이벤트(Event) 처리의 관계는 무엇인가?
실행 컨텍스트와 비동기 콜백(asynchronous callbacks)의 관계는 무엇인가?
실행 컨텍스트와 가비지 컬렉션(garbage collection)의 관계는 무엇인가?
실행 컨텍스트와 스코프 체인의 메모리 관리 방식은 어떻게 달라지는가?
실행 컨텍스트와 예외 처리(exception handling)의 동작 방식은 무엇인가?
실행 컨텍스트와 함수 호이스팅의 관계는 무엇인가?
실행 컨텍스트와 클로저의 사용 사례에 대해 알아보자.
실행 컨텍스트와 바인딩(binding)의 관계는 무엇인가?
실행 컨텍스트와 스레드(thread)의 동작 방식은 어떻게 달라지는가?
실행 컨텍스트와 실행 가능한 코드(executable code)의 관계는 무엇인가?
실행 컨텍스트와 반복문(loop)의 동작 방식은 어떻게 달라지는가?
실행 컨텍스트와 객체 생성(object creation)의 관계는 무엇인가?
실행 컨텍스트와 함수 호출(function invocation)의 관계는 무엇인가?
실행 컨텍스트와 변수 스코프 해제의 동작 방식은 무엇인가?
실행 컨텍스트와 메소드 호출(method invocation)의 동작 방식은 무엇인가?
실행 컨텍스트와 프로미스(Promise) 처리의 동작 방식은 무엇인가?